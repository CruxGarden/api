{
  "name": "crux-api",
  "version": "0.0.1",
  "description": "Crux Garden API - Where Ideas Grow",
  "author": "The Keeper",
  "private": false,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/CruxGarden/api.git"
  },
  "bugs": {
    "url": "https://github.com/CruxGarden/api/issues"
  },
  "homepage": "https://github.com/CruxGarden/api#readme",
  "keywords": [
    "crux",
    "ideas",
    "notes",
    "digital-garden",
    "zettelkasten",
    "personal-knowledge-management",
    "dimensions",
    "nestjs",
    "api",
    "typescript",
    "graph"
  ],
  "scripts": {
    "prepare": "npm run build",
    "build": "nest build",
    "build:ci": "npm ci --include=dev && npm run build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "lint": "eslint \"{src,test}/**/*.ts\" --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "test": "jest --silent",
    "test:all": "npm run test && npm run test:integration",
    "test:watch": "jest --watch",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:coverage": "jest --coverage --silent --coveragePathIgnorePatterns=\".spec.ts$|.integration-spec.ts$|swagger|module.ts|dto|entities|/dist/|/db/|/node_modules/\" --testRegex=\"(spec|integration-spec)\\.ts$\" --rootDir=. --testPathIgnorePatterns=\"/node_modules/|/dist/|/db/\"",
    "test:integration": "jest --config ./test/jest-integration.json --silent",
    "test:module": "jest --testPathPatterns",
    "supabase:start": "npx supabase start",
    "supbase:stop": "npx supabase stop",
    "supabase:link": "npx supabase link --project-ref <project_ref>",
    "supabase:reset": "./scripts/reset_supabase.sh",
    "migrate:prod": "npx knex migrate:latest --env production --verbose && npx knex seed:run --env production --verbose",
    "migrate:nursery": "npx knex migrate:latest --env nursery --verbose && npx knex seed:run --env nursery --verbose",
    "migrate:make": "npx knex migrate:make --env development",
    "migrate:latest": "npx knex migrate:latest --env development",
    "migrate:rollback": "npx knex migrate:rollback --env development",
    "migrate:status": "npx knex migrate:status --env development",
    "migrate:seed": "npx knex migrate:latest --env development && npx knex seed:run --env development",
    "seed:make": "npx knex seed:make --env development",
    "seed:run": "npx knex seed:run --env development",
    "seed:run:prod": "npx knex seed:run --env production",
    "docker:redis:connect": "docker exec -it cruxgarden-redis redis-cli",
    "docker:db:connect": "docker exec -it cruxgarden-postgres psql -U cruxgarden -d cruxgarden",
    "docker:api:connect": "docker exec -it cruxgarden-api sh",
    "docker:dev": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml up -d",
    "docker:dev:down": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml down",
    "docker:dev:logs": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml logs -f api",
    "docker:dev:rebuild": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml up -d --build api",
    "docker:dev:reset": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml down -v && docker-compose --env-file ../.env -f docker-compose.dev.yml up -d --build",
    "docker:dev:db": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml up -d postgres redis",
    "docker:dev:db:stop": "cd docker && docker-compose --env-file ../.env -f docker-compose.dev.yml stop postgres redis",
    "docker:nursery": "cd docker && docker-compose -f docker-compose.nursery.yml up -d",
    "docker:nursery:logs": "cd docker && docker-compose -f docker-compose.nursery.yml logs -f",
    "docker:nursery:down": "cd docker && docker-compose -f docker-compose.nursery.yml down",
    "docker:nursery:pull": "cd docker && docker-compose -f docker-compose.nursery.yml pull",
    "docker:nursery:reset": "cd docker && docker-compose -f docker-compose.nursery.yml down -v && docker-compose -f docker-compose.nursery.yml pull && docker-compose -f docker-compose.nursery.yml up -d",
    "docker:nursery:db": "cd docker && docker-compose -f docker-compose.nursery.yml up -d postgres redis",
    "docker:nursery:db:stop": "cd docker && docker-compose -f docker-compose.nursery.yml stop postgres redis",
    "release:patch": "npm version patch && git push --follow-tag",
    "release:minor": "npm version minor && git push --follow-tag",
    "release:major": "npm version major && git push --follow-tag"
  },
  "dependencies": {
    "@aws-sdk/client-sesv2": "^3.849.0",
    "@nestjs/common": "^11.1.5",
    "@nestjs/core": "^11.1.5",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@supabase/supabase-js": "^2.52.0",
    "ajv": "^8.17.1",
    "camelcase-keys": "^10.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.0",
    "format-link-header": "^3.1.1",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.1.0",
    "knex-paginate": "^3.2.0",
    "openai": "^5.10.1",
    "pg": "^8.16.3",
    "redis": "^5.6.0",
    "redoc-express": "^2.1.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "short-unique-id": "^5.3.2",
    "snakecase-keys": "^9.0.2",
    "swagger-ui-express": "^5.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.7",
    "@nestjs/config": "^4.0.2",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.5",
    "@types/express": "^5.0.3",
    "@types/format-link-header": "^2.1.2",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^24.0.15",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-prettier": "^5.5.3",
    "jest": "^30.0.4",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supabase": "^2.40.7",
    "supertest": "^7.1.3",
    "ts-jest": "^29.4.0",
    "ts-loader": "^9.5.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3",
    "ts-node": "^10.9.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1"
    },
    "transformIgnorePatterns": [
      "node_modules/(?!(camelcase-keys|snakecase-keys|map-obj|camelcase|quick-lru|change-case)/)"
    ],
    "automock": false,
    "resetMocks": false
  },
  "env": {
    "required": [
      "JWT_SECRET",
      "DATABASE_URL",
      "REDIS_URL",
      "AWS_ACCESS_KEY_ID",
      "AWS_SECRET_ACCESS_KEY",
      "AWS_REGION",
      "FROM_EMAIL_ADDRESS"
    ],
    "optional": [
      "DB_POOL_MIN",
      "DB_POOL_MAX",
      "DB_POOL_IDLE_TIMEOUT",
      "DB_POOL_ACQUIRE_TIMEOUT",
      "RATE_LIMIT_TTL",
      "RATE_LIMIT_MAX",
      "CORS_ORIGIN"
    ]
  }
}
